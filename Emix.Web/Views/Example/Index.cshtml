@{
    Layout = "~/Views/Shared/_LayoutExample.cshtml";
}

<h1>UPPERCASE</h1>
<div ng-controller="Ctrl">
    {{welcome | uppercase}}
    <br>
    {{1443517985683 | date:"dd/MM/yyyy H:mm"}}
</div>

<h1>APPLY CTRL</h1>
<div ng-controller="ApplyCtrl">
    <p>
        AngularJS actually calls almost all of
        your code within an $apply call. Events like <code>ng-click</code>, controller initialization, <code>$http</code>
        callbacks are all wrapped in <code>$scope.$apply()</code>. So you don’t need to call it yourself, in fact you can’t.
    </p>

    <p>
        $apply() is used to execute an expression in angular from outside of the angular framework. (For example from browser
        DOM events, setTimeout, XHR or third party libraries).
    </p>
    <br />

    <div class="well container">
        <div class="row">
            <div class="col-lg-12 bg-primary">
                Wartośc zmiennej "credit" zmienia się co 2 sekundy jednak nie widać tego w widoku.
                <br>
                Kliknij button lub wprowadź znak do inputa aby wywołać event i zaktualizować widok.
                <h1>credit: {{credit}}</h1>
            </div>
        </div>
        <br>
        <div class="row">
            <div class="col-lg-6">
                <p>metoda $apply jest wywoływana kiedy w scope zachodzi zmiana (dirty checking)</p>
                <input type="text" ng-model="test" />
            </div>
            <div class="col-lg-6">
                <p>można też ją wywołać ręcznie</p>
                <button>call $apply()</button>
            </div>
        </div>
    </div>
</div>


<h1>STUDENTLIST Cotroller</h1>
<div ng-controller='StudentListCtrl'>
    <ul>
        <li ng-repeat='student in students'>
            <a href='/student/view/{{student.id}}'>{{student.name}}</a>
        </li>
    </ul>
    <button ng-click="insertTom()">Insert</button>
</div>

<h1>SHARED SCOPE</h1>
<div my-shared-scope></div>

<h1>FRIENDS CONTROLLER</h1>
<div ng-controller="FriendsCtrl">
    name: {{friends}}
    <hr>
    <div my-worker ng-repeat="friend in friends"
               name="{{user.name}}"
               model="friend"
               action="action(param)">
        worker {{$index + 1}}
    </div>

</div>


<h1>FormStartupController</h1>
<div>
    <form ng-controller='FormStartupController' ng-submit="requestFunding()">
        Starting:
        <input ng-change="computeNeeded()"
               ng-model="funding.startingEstimate">
        Recommendation: {{needed}}
        <button>Fund my startup!</button>
        <button ng-click="reset()">Reset</button>
    </form>
</div>
<!--<h1>DeathrayMenuController</h1>
<div ng-controller='DeathrayMenuController'>
<ul>
<li class='menu-disabled-{{isDisabled}}' ng-click='stun()'>Stun</li>
<li class='menu-disabled-true' ng-click='stun()'>StunGray</li>
</ul>
</div>-->
